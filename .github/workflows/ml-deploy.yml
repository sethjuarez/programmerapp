name: deploy

on:
  workflow_dispatch:     

env:
  MODEL_NAME: dev-model
  ENDPOINT_NAME: dev-endpoint

jobs:
  endpoint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: add az ml extension
      run: |
        az extension add -n ml -y
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_TOKEN}}

    - name: set aml defaults
      run: |
          az config set defaults.workspace=${{secrets.AML_WORKSPACE}}
          az config set defaults.group=${{secrets.AML_RG}}
    - id: deployments
      name: check endpoint
      run: |
        ENDPOINT_EXISTS=$(az ml online-endpoint list -o tsv --query "[?name=='${ENDPOINT_NAME}'][name]" |  wc -l)
        if [[ ENDPOINT_EXISTS -ne 1 ]]; then
            az ml online-endpoint create -n ${ENDPOINT_NAME} -f ./config/deploy/endpoint.yml    
        else
            echo "endpoint exists"
        fi
  deployment:
    needs: [endpoint]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: add az ml extension
      run: |
        az extension add -n ml -y
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_TOKEN}}

    - name: set aml defaults
      run: |
          az config set defaults.workspace=${{secrets.AML_WORKSPACE}}
          az config set defaults.group=${{secrets.AML_RG}}
    - name: Add Deployment
      run: |
        # deployment name
        DEPLOYMENT_NAME=${ENDPOINT_NAME}-${GITHUB_RUN_ID}

        # move scoring script to deployment folder
        cp ./score.py ./config/deploy/score.py

        # create deployment
        az ml online-deployment create --name ${DEPLOYMENT_NAME} --endpoint ${ENDPOINT_NAME} -f ./config/deploy/deployment.yml
        
        # if PROD does not exist, mark this as prod and exit
        PROD_DEPLOYMENT=$(az ml online-endpoint show -n ${ENDPOINT_NAME} -o tsv --query "tags.PROD_DEPLOYMENT")
        
        if [[ -z "$PROD_DEPLOYMENT" ]]; then
            # tag the current deployment as prod and set traffic to 100%
            az ml online-endpoint update --name ${ENDPOINT_NAME} --traffic "${DEPLOYMENT_NAME}=100" --set tags.PROD_DEPLOYMENT=${DEPLOYMENT_NAME}
        else
            # modify traffic to siphon 1% to new deployment
            az ml online-endpoint update -n ${ENDPOINT_NAME} --traffic "${PROD_DEPLOYMENT}=99 ${DEPLOYMENT_NAME}=1"    
        fi